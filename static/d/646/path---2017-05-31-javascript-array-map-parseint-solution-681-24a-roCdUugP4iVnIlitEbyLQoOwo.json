{"data":{"content":{"edges":[{"node":{"id":"0ce66503-9d4b-5d28-9790-ca7ea6276540","html":"<p>如果我想轉換數組裡面的字符串為數字的話，很自然就會想到 <code class=\"language-text\">map</code> 和 <code class=\"language-text\">parseInt</code> 這兩個方法。但是用起來的時候卻不是我想要的結果。。。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"3\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"4\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>parseInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, NaN, NaN, NaN, NaN]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"原因\"><a href=\"#%E5%8E%9F%E5%9B%A0\" aria-label=\"原因 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原因</h2>\n<p>如果我們細看 map 的參數，就會發現它的 callback 會有三個 arguments：<code class=\"language-text\">currentValue</code>, <code class=\"language-text\">index</code> 和 <code class=\"language-text\">array</code>。</p>\n<p>對於 <code class=\"language-text\">parseInt</code> 來說， 它會接收<code class=\"language-text\">currentValue</code>和 <code class=\"language-text\">index</code>，並用 index 作為 index 進制。。。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// OK => 1</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 不合法的進制。。。</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN, 二進制沒有 3</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN, 三進制沒有 4</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NaN, 四進制沒有 5</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"解決方法\"><a href=\"#%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95\" aria-label=\"解決方法 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解決方法</h2>\n<ol>\n<li>用<code class=\"language-text\">.map(parseFloat)</code>，因為它只接收一個參數。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> c <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>parseFloat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ol>\n<li>用<code class=\"language-text\">.map(Number)</code></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> d <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ol>\n<li>用<code class=\"language-text\">.map(num =&gt; parseInt(num))</code></li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> e <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">=></span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/2017/05/31/javascript-array-map-parseint-solution/#%E5%8E%9F%E5%9B%A0\">原因</a></li>\n<li><a href=\"/2017/05/31/javascript-array-map-parseint-solution/#%E8%A7%A3%E6%B1%BA%E6%96%B9%E6%B3%95\">解決方法</a></li>\n</ul>","excerpt":"如果我想轉換數組裡面的字符串為數字的話，很自然就會想到   和   這兩個方法。但是用起來的時候卻不是我想要的結果。。。 原因 如果我們細看 map 的參數，就會發現它的 callback 會有三個 arguments…","fields":{"slug":"/2017/05/31/javascript-array-map-parseint-solution/"},"frontmatter":{"id":"20181022a","title":"JavaScript Array.map(parseInt) 錯誤解決方案","slug":"/2017/05/31/javascript-array-map-parseint-solution/","date":"2017-05-31T03:48:03.125Z","headerImage":null}},"previous":null,"next":null}]},"latestPosts":{"totalCount":6,"edges":[{"node":{"fields":{"slug":"learn-javascript-through-stackoverflow"},"frontmatter":{"id":null,"title":"如何利用 Stack Overflow 高效學習 JavaScript？","slug":"learn-javascript-through-stackoverflow","date":"2019-03-15T02:38:23.251Z","headerImage":"https://i.imgur.com/VvGbog9.jpg"}}},{"node":{"fields":{"slug":"/how-to-deploy-nodejs-application-via-zeit-free-plan"},"frontmatter":{"id":null,"title":"如何透過 ZEIT 方便快捷地部署免費的 Node.js 項目？","slug":"/how-to-deploy-nodejs-application-via-zeit-free-plan","date":"2019-03-04T01:00:00.000Z","headerImage":"https://i.imgur.com/Lgfa2Eu.png"}}},{"node":{"fields":{"slug":"/why-import-react-from-react-in-a-functional-component"},"frontmatter":{"id":null,"title":"為什麼函數式組件需要引進 React？","slug":"/why-import-react-from-react-in-a-functional-component","date":"2019-02-26T09:44:05.963Z","headerImage":"https://i.imgur.com/3GRiphI.png"}}},{"node":{"fields":{"slug":"/how-to-use-react-to-render-markdown-articles"},"frontmatter":{"id":null,"title":"React 渲染 Markdown 的方法","slug":"/how-to-use-react-to-render-markdown-articles","date":"2019-02-23T00:42:10.915Z","headerImage":"https://i.imgur.com/3GRiphI.png"}}},{"node":{"fields":{"slug":"/2019/02/12/useful-web-hosting-platform-netlify-zeit-github-pages/"},"frontmatter":{"id":"20190212r","title":"那些超好用的全棧項目部署構建平台 - Netlify, ZEIT","slug":"/2019/02/12/useful-web-hosting-platform-netlify-zeit-github-pages/","date":"2019-02-17T03:48:03.125Z","headerImage":null}}},{"node":{"fields":{"slug":"/2019/01/20/10-years-challenge-vertical-horizontal-center-alignment/"},"frontmatter":{"id":"20190120q","title":"十年挑戰之水平垂直置中","slug":"/2019/01/20/10-years-challenge-vertical-horizontal-center-alignment/","date":"2019-01-20T03:48:03.125Z","headerImage":null}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"0ce66503-9d4b-5d28-9790-ca7ea6276540","index":49}}