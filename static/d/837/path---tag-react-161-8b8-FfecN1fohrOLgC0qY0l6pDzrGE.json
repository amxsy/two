{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"278f86f6-7edf-5a1b-8c71-15129146261f","frontmatter":{"id":null,"url":"/how-to-deploy-nodejs-application-via-zeit-free-plan","title":"如何透過 ZEIT 方便快捷地部署免費的 Node.js 項目？","date":"2019-03-04T01:00:00.000Z","tags":["ZEIT","NOW","React","免費","實用"],"headerImage":"https://i.imgur.com/Lgfa2Eu.png","description":"ZEIT 平台提供了免費的網站空間平台給開發者，我們可以透過 ZEIT 平台來部署 Node.js, Express.js, Koa.js 等應用。如果你有寫過 Node.js 應用，又想找個免費空間部署這些應用的話，那麼 ZEIT 會是一個不錯的選擇。"}}},{"node":{"id":"bf6b2c24-0f88-5756-b456-8d8e8f5b1955","frontmatter":{"id":null,"url":"/why-import-react-from-react-in-a-functional-component","title":"為什麼函數式組件需要引進 React？","date":"2019-02-26T09:44:05.963Z","tags":["React","Babel","JSX","閱讀","前端"],"headerImage":"https://i.imgur.com/3GRiphI.png","description":"在編寫組件時，最讓我迷惑的是在我編寫純函數組件，為什麼沒有在代碼裡面調用 React 都需要導入 React。經過一番調研，我發現是因為 JSX 轉譯的設定。不過，人是比較懶惰的，透過安裝 babel-plugin-react-require 插件，達到自動導入 React 的效果。這篇文章將會講述我的調研經歷和一點反思。"}}},{"node":{"id":"99ff3582-e92b-5503-9d3d-051128f3d98c","frontmatter":{"id":null,"url":"/how-to-use-react-to-render-markdown-articles","title":"React 渲染 Markdown 的方法","date":"2019-02-23T00:42:10.915Z","tags":["Markdown","React","XSS","GatsbyJS"],"headerImage":"https://i.imgur.com/3GRiphI.png","description":"Markdown 提供了編寫文章的方便，我們可以透過 Remarkable，Marked 等一些解析 Markdown 工具來獲取 HTML，然後透過 React 原生的 dangerouslySetInnerHTML 方法直接放到組件裡面。"}}},{"node":{"id":"d193c1a4-0770-5c6c-883b-3c7bc8fcb2a9","frontmatter":{"id":"20170702a","url":"/2017/08/27/react-app-optimization-1-source-map","title":"React 應用輕量化（一）Source Map","date":"2017-08-27T03:48:03.125Z","tags":["React","前端"],"headerImage":null,"description":"create-react-app 提供了很方便的創建 React 應用途徑。它已經把 webpack, Babel, Autoprefixer, ESLint, Jest 等常用工具打包進去。可以說是一個非常方便，好用的製造 React 應用工具。當我打算把包裝好的檔案推上去的時候，我卻發現打包之後的檔案大小有點大，因此我就開始優化這個網頁應用了。第一點我優化的地方就是 Source Map。"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tag":"React"}}