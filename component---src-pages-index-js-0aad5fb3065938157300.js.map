{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/api/images.js","webpack:///./src/components/Tag/index.js","webpack:///./src/components/ShareBox/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js"],"names":["Page","_ref","data","location","_data$latestPosts","latestPosts","totalCount","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","marginTop","_components_Sidebar__WEBPACK_IMPORTED_MODULE_3__","posts","post","content","map","_ref2","node","_components_Card__WEBPACK_IMPORTED_MODULE_2__","Object","assign","frontmatter","key","fields","slug","_components_ShareBox__WEBPACK_IMPORTED_MODULE_4__","url","href","hasCommentBox","pageQuery","parseImgur","rawImage","size","match","resizedImage","replace","small-square","big-square","small","medium","large","huge","parseImageTag","title","text","parseTitle","module","exports","getGalleryImage","Tag","name","count","propTypes","PropTypes","string","isRequired","oneOfType","number","defaultProps","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_ga__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__","CommentButton","lineHeight","color","paddingLeft","onClick","ReactGA","event","category","action","icon","ShareBox","bool","CardHeader","headerImage","image","backgroundColor","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","backgroundImage","Card","date","headerBackgroundColor","description","tags","split","_Tag__WEBPACK_IMPORTED_MODULE_4__","arrayOf","config","friends","Friend","react_default","friend","ExternalLink","rel","LatestPost","gatsby_browser_entry","object","Information","components_Sidebar_LatestPost","components_Sidebar_Friend","wordings","githubUsername","zhihuUsername","email","iconUrl","about","Icon","target","index_es","Sidebar","src","alt","Sidebar_Icon","components_Sidebar_Information","array"],"mappings":"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","file":"component---src-pages-index-js-0aad5fb3065938157300.js","sourcesContent":["/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\n\r\nimport Card from '../components/Card';\r\nimport Sidebar from '../components/Sidebar';\r\nimport ShareBox from '../components/ShareBox';\r\n\r\nconst Page = ({ data, location }) => {\r\n  const { totalCount, edges } = data.latestPosts;\r\n  return (\r\n    <div\r\n      className=\"row homepage\"\r\n      style={{\r\n        marginTop: 20,\r\n      }}\r\n    >\r\n      <Sidebar totalCount={totalCount} posts={edges} post />\r\n      <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\r\n        {data.content.edges.map(({ node }) => (\r\n          <Card {...node.frontmatter} key={node.fields.slug} />\r\n        ))}\r\n      </div>\r\n      <div className=\"col-xl-2 col-lg-1 order-3\" />\r\n      <ShareBox url={location.href} hasCommentBox={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n\r\nexport const pageQuery = graphql`\r\n  fragment cardData on MarkdownRemark {\r\n    fields {\r\n      slug\r\n    }\r\n    frontmatter {\r\n      id\r\n      title\r\n      url: slug\r\n      date\r\n      tags\r\n      description\r\n      headerImage\r\n    }\r\n  }\r\n  query BlogQuery {\r\n    content: allMarkdownRemark(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n    ) {\r\n      edges {\r\n        node {\r\n          ...cardData\r\n        }\r\n\r\n        previous {\r\n          ...cardData\r\n        }\r\n\r\n        next {\r\n          ...cardData\r\n        }\r\n      }\r\n    }\r\n\r\n    latestPosts: allMarkdownRemark(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      limit: 6\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          ...cardData\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","// s = Small Square (90×90)\r\n// b = Big Square (160×160)\r\n// t = Small Thumbnail (160×160)\r\n// m = Medium Thumbnail (320×320)\r\n// l = Large Thumbnail (640×640)\r\n// h = Huge Thumbnail (1024×1024)\r\nconst defaultPicture = 'M795H8A.jpg';\r\n\r\nconst parseImgur = (rawImage, size = 'large') => {\r\n  if (!rawImage) {\r\n    return `https://i.imgur.com/${defaultPicture}`;\r\n  }\r\n\r\n  const mapping = {\r\n    'small-square': 's',\r\n    'big-square': 'b',\r\n    small: 't',\r\n    medium: 'm',\r\n    large: 'l',\r\n    huge: 'h',\r\n  };\r\n\r\n  // Don't resize the png image\r\n  // as there is a transparent bug in imgur\r\n  if (rawImage.match('(png)|(gif)')) {\r\n    // Prevent double http url\r\n    if (rawImage.match('http')) {\r\n      return rawImage;\r\n    }\r\n    return `https://i.imgur.com/${rawImage}`;\r\n  }\r\n\r\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\r\n  // Prevent double http url\r\n  if (resizedImage.match('http')) {\r\n    return resizedImage;\r\n  }\r\n  return `https://i.imgur.com/${resizedImage}`;\r\n};\r\n\r\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\r\n\r\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\r\n  href,\r\n  'large',\r\n)} ${parseTitle(title, text)} />`;\r\n\r\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\r\n  href,\r\n  'huge',\r\n)}\">${parseImageTag({ href, title, text })}</a>`;\r\n\r\nmodule.exports = {\r\n  parseImgur,\r\n  parseImageTag,\r\n  getGalleryImage,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tag = ({ name, count }) => (\r\n  <a href={`/tag/${name}`} className=\"header-tag\">\r\n    {name}\r\n    &nbsp;\r\n    {count}\r\n  </a>\r\n);\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nTag.defaultProps = {\r\n  count: '',\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './index.scss';\r\n\r\nconst CommentButton = () => (\r\n  <a\r\n    className=\"share-button\"\r\n    style={{\r\n      lineHeight: '1.7rem',\r\n      color: '#337ab7',\r\n      paddingLeft: '0.15rem',\r\n    }}\r\n    href=\"#gitalk-container\"\r\n    onClick={() =>\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Goto Comment Box',\r\n      })\r\n    }\r\n  >\r\n    <FontAwesomeIcon icon={['far', 'comment']} />\r\n  </a>\r\n);\r\n\r\nconst ShareBox = ({ url, hasCommentBox }) => (\r\n  <div className=\"m-share-box\">\r\n    <a\r\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\r\n      title=\"\"\r\n      className=\"share-button\"\r\n      onClick={() =>\r\n        ReactGA.event({\r\n          category: 'Share',\r\n          action: 'Facebook Share',\r\n        })\r\n      }\r\n    >\r\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\r\n    </a>\r\n\r\n    {/* 視覺置中 => 稍微往上偏移 */}\r\n    {hasCommentBox && <CommentButton />}\r\n\r\n    <a\r\n      className=\"share-button\"\r\n      href=\"#header\"\r\n      onClick={() => {\r\n        ReactGA.event({\r\n          category: 'User',\r\n          action: 'Scroll to Top',\r\n        });\r\n      }}\r\n      style={{\r\n        lineHeight: '1.7rem',\r\n        paddingLeft: '0.1rem',\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nShareBox.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  hasCommentBox: PropTypes.bool,\r\n};\r\n\r\nShareBox.defaultProps = {\r\n  hasCommentBox: true,\r\n};\r\n\r\nexport default ShareBox;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tag from '../Tag';\r\n\r\nimport { parseImgur } from '../../api/images';\r\n\r\nimport './index.scss';\r\n\r\nconst imageStyle = (headerImage, color) => ({\r\n  backgroundColor: `#${color}`,\r\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\r\n});\r\n\r\nconst CardHeader = ({ url, image, backgroundColor }) => (\r\n  <Link to={url} href={url}>\r\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\r\n  </Link>\r\n);\r\n\r\nconst Card = ({\r\n  title,\r\n  date,\r\n  url,\r\n  headerImage,\r\n  headerBackgroundColor,\r\n  description,\r\n  tags,\r\n}) => (\r\n  <div className=\"col-sm-12 pb-4\">\r\n    <div className=\"custom-card\">\r\n      {headerImage && (\r\n        <CardHeader\r\n          url={url}\r\n          image={headerImage}\r\n          backgroundColor={headerBackgroundColor}\r\n        />\r\n      )}\r\n      <div className=\"data\">\r\n        <div className=\"content\">\r\n          <div className=\"stats\">\r\n            <span className=\"date\">{date.split('T')[0]}</span>\r\n            {tags.map(name => (\r\n              <Tag name={name} key={name} />\r\n            ))}\r\n          </div>\r\n          <Link to={url} href={url}>\r\n            <h4 className=\"title\">{title}</h4>\r\n          </Link>\r\n          <p>{description}</p>\r\n          <Link to={url} href={url}>\r\n            ....繼續閱讀全文內容\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  url: PropTypes.string.isRequired,\r\n  headerImage: PropTypes.string,\r\n  headerBackgroundColor: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nCardHeader.propTypes = Card.propTypes;\r\n\r\nCard.defaultProps = {\r\n  headerImage: '',\r\n  tags: [],\r\n  date: '',\r\n  headerBackgroundColor: '',\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport ExternalLink from '../../ExternalLink';\r\n\r\nimport { config } from '../../../../data';\r\n\r\nimport './index.scss';\r\n\r\nconst { friends = [] } = config;\r\n\r\nconst Friend = () => (\r\n  <div className=\"friend\">\r\n    <p>友情鏈接</p>\r\n    {friends.map(friend => (\r\n      <ExternalLink\r\n        href={friend.href}\r\n        title={friend.title}\r\n        key={friend.title}\r\n        rel=\"noopener\"\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nconst LatestPost = ({ posts }) => (\r\n  <div className=\"latest-post\">\r\n    <p>最新文章</p>\r\n    {posts.map(({ node }) => (\r\n      <Link\r\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n      >\r\n        {node.frontmatter.title}\r\n      </Link>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nLatestPost.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default LatestPost;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Friend from '../Friend';\r\nimport LatestPost from '../LatestPost';\r\nimport './index.scss';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Information = ({ totalCount, posts }) => (\r\n  <div className=\"d-none d-lg-block information my-2\">\r\n    <hr />\r\n    <p>\r\n      共\r\n      {totalCount}\r\n      篇文章\r\n    </p>\r\n    <hr />\r\n    <LatestPost posts={posts} />\r\n    <hr />\r\n    <Friend />\r\n  </div>\r\n);\r\n\r\nInformation.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { config } from '../../../data';\r\n\r\nimport Information from './Information';\r\n\r\nimport './index.scss';\r\n\r\nconst {\r\n  wordings = [],\r\n  githubUsername,\r\n  zhihuUsername,\r\n  email,\r\n  iconUrl,\r\n  about,\r\n} = config;\r\n\r\nconst Icon = ({ href, icon }) => (\r\n  <a\r\n    target=\"_blank\"\r\n    href={href}\r\n    rel=\"external nofollow noopener noreferrer\"\r\n    className=\"custom-icon\"\r\n  >\r\n    <span className=\"fa-layers fa-fw fa-2x\">\r\n      <FontAwesomeIcon icon={icon} />\r\n    </span>\r\n  </a>\r\n);\r\n\r\nconst Sidebar = ({ post, totalCount, posts }) => (\r\n  <header\r\n    className={`intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1 ${\r\n      post === true ? 'order-11' : 'order-1'\r\n    }`}\r\n  >\r\n    <div className=\"about-me\">\r\n      <Link to={about} href={about} className=\"name\">\r\n        <img className=\"avatar\" src={iconUrl} alt=\"Calpa\" />\r\n        <h4>Calpa</h4>\r\n      </Link>\r\n      <p className=\"mb-1\">{wordings[0]}</p>\r\n      <p className=\"mb-3\">{wordings[1]}</p>\r\n      <Icon\r\n        href={`https://www.zhihu.com/people/${zhihuUsername}`}\r\n        icon={['fab', 'zhihu']}\r\n      />\r\n      <Icon\r\n        href={`https://github.com/${githubUsername}`}\r\n        icon={['fab', 'github']}\r\n      />\r\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\r\n      <Information totalCount={totalCount} posts={posts} />\r\n    </div>\r\n  </header>\r\n);\r\n\r\nIcon.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nSidebar.propTypes = {\r\n  post: PropTypes.bool,\r\n  totalCount: PropTypes.number,\r\n  posts: PropTypes.array // eslint-disable-line\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  post: false,\r\n  totalCount: 0,\r\n};\r\n\r\nexport default Sidebar;\r\n"],"sourceRoot":""}